plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    signingConfigs {
        release {
            //storeFile file("../yourapp.keystore")
            //storePassword "your password"
            //keyAlias "your alias"
            //keyPassword "your password"
            //edit local.properties
            //second, add property STORE_FILE, STORE_PASSWORD, KEY_ALIAS, KEY_PASSWORD
        }
    }

    compileSdkVersion 30

    defaultConfig {
        applicationId 'xuk.android'
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 12
        versionName "1.3.1"

        flavorDimensions "versionCode"
    }

    buildTypes {
        release {
            debuggable false
            signingConfig signingConfigs.release
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    buildFeatures {
        viewBinding = true
    }

    productFlavors {
        Canary {
            manifestPlaceholders = [channel : "Canary",
                                    app_name: "Call D",
                                    app_icon: "@mipmap/ic_launcher"]
        }
        Stage {
            manifestPlaceholders = [channel : "Stage",
                                    app_name: "Call R",
                                    app_icon: "@drawable/ic_stage"]
        }
    }

    // rename the apk with the version name
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (variant.buildType.name == "release") {
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    def fileName = outputFile.name.replace("app", "android-v${variant.versionName}-${variant.versionCode}-${buildTime()}".toLowerCase())
                    outputFileName = fileName
                }

            }
        }
    }
}

Properties props = new Properties()
def propFile = file('../gradle.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {

        println 'RELEASE BUILD SIGNING'
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'RELEASE BUILD NOT FOUND SIGNING PROPERTIES'

        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'RELEASE BUILD NOT FOUND SIGNING FILE'
    android.buildTypes.release.signingConfig = null
}

static def buildTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'androidx.constraintlayout:constraintlayout:2.0.4'
    api 'com.google.android.material:material:1.3.0-beta01'

    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    api 'androidx.viewpager2:viewpager2:1.0.0'

    api "androidx.room:room-runtime:$room_version"
    api "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Kotlin Navigation
    api "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    api "androidx.navigation:navigation-ui-ktx:$navigation_version"

    implementation "androidx.preference:preference-ktx:$preference_version"
    implementation 'androidx.paging:paging-runtime-ktx:3.0.0-alpha11'

    api 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    api 'jp.wasabeef:glide-transformations:4.0.1'

    api 'pub.devrel:easypermissions:3.0.0'
    api 'com.mikepenz:iconics-core:3.0.3@aar'
    api 'com.mikepenz:material-design-iconic-typeface:2.2.0.4@aar'

    api 'com.gongwen:swipeback:1.0.2'
    api 'com.tencent.bugly:crashreport:3.1.0'
    api 'androidx.palette:palette-ktx:1.0.0'

    api 'com.jakewharton.timber:timber:4.7.1'

    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}
